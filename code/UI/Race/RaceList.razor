@namespace TerryTyper.UI.Race
@attribute [StyleSheet]
@using System
@using System.Collections
@using System.Collections.Generic
@using System.Linq
@using Sandbox
@using Sandbox.UI
@using Sandbox.UI.GameMenu
@using TerryTyper.Race
@inherits RaceListBase

<root>
	<div class="header">
		<h1>Active Races</h1>
		<button class="create-button" @onclick=@(HandleCreateRace)>+</button>
	</div>
	<div class="races">
		@for ( int i = 0; i < Races.Count; i++ )
		{
			var race = Races[i];
			if ( race == null ) continue;
			int index = i;
			<RaceListItem SelectedIndex="@index"
			              Index="@index"
			              Race="@race"
			              SelectedAction="@(() => {SelectedIndex = index; JoinRace( index );})"
			              LeaveAction="@(HandleLeaveRace)"
			              DeleteAction="@(() => DeleteRace( race.RaceId ))"/>
		}
	</div>
</root>

@code {

	// todo what is this stuff doing here
	private int SelectedIndex = 0;
	private IList<RaceEntity> Races => Entity.All.OfType<RaceEntity>().ToList();
	
	protected override int BuildHash()
	{
		var code = new HashCode();
		Log.Info( Races.Count );
		foreach ( var race in Races )
		{
			code.Add( race.RaceId );
		}
		var res = code.ToHashCode();
		Log.Info( res );
		return res;
	}

	private void HandleCreateRace()
	{
		CreateRace();
	}
	
}
