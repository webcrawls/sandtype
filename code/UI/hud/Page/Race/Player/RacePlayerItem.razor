@namespace TerryTyper
@using System
@using Sandbox.UI
@inherits Panel
@attribute [StyleSheet]

<root>
	<div class="race-overlay">
		<RacePlayerLine Progress="@(_progress)"/>
	</div>
	<div class="overlay">
		<div class="avatar-wrapper">
			@if ( _winner )
			{
				<img class="winner" src="/assets/svg/crown.svg"/>
			}
			<div class="avatar-container">
				<img class="avatar" src="avatar:@(_steamId)"/>
			</div>
		</div>
		<p>@_name</p>
	</div>
	<div class="text-view-container">
		<div class="text-view-overlay">
			@if ( Race.State == RaceState.COUNTING_DOWN )
			{
				<label>Waiting to start...</label>
			}
			@if ( _winner )
			{
				<label>completed in @(Math.Round(Player.CompleteTime - Race.StartTime, 2))s</label>
			}
		</div>
		<TextView class="text-race-view @( (Race.State == RaceState.ENDED && Player.Complete) ? "text-race-hidden" : "")" Theme="@_theme" @ref="_view"/>
	</div>
</root>

@code {

	public RacePlayer Player;
	public Race Race;
	
	private TextView _view;
	private string _name => Player.SteamName;
	private bool _winner => Race.Winners.Contains( Player.SteamId );
	private long _steamId => Player.SteamId;
	private float _progress => Player.Input.Count / (float) Math.Max(1, Race.Target.Count);
	private TextTheme _theme => TextTheme.Themes[Player.Theme];
	private TextTheme _currentTheme = null;

	public override void Tick()
	{
		base.Tick();
		_view.CurrentInput = Player.CurrentInput;
		_view.Input = Player.Input;
		_view.Target = Race.Target;
		if ( _theme.Id != _currentTheme?.Id )
		{
			if ( _currentTheme != null )
				StyleSheet.Remove( _currentTheme.Stylesheet );
			_currentTheme = _theme;
			_view.Theme = _currentTheme;
			StyleSheet.Load( _currentTheme.Stylesheet );
		}
		StateHasChanged();
	}

	protected override int BuildHash()
	{
		var code = new HashCode();
		foreach (string input in Player.Input )
		{
			code.Add( input );
		}
		foreach (string input in Race.Target )
		{
			code.Add( input );
		}
		
		code.Add( Player.CurrentInput );
		code.Add( _progress );
		code.Add( _winner );
		code.Add( _name );
		code.Add( Race.State );

		var res = code.ToHashCode();

		return res;
	}
	
}
